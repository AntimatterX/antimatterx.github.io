/*! LibraryTemplate v2.4.0 | (c) AntimatterX | https://opensource.org/licenses/MIT */
!function e(t,n){"use strict";var r={libKey:[],conflict:{},fn:{noConflict:function(){for(var e=0;e<r.libKey.length;e++){var n=r.libKey[e];n in r.conflict&&(t[n]=r.conflict[n])}return r.conflict},getType:function(e){return Object.prototype.toString.call(e).slice(8,-1)},isType:function(e,t){var n=r.fn.getType(e);switch(r.fn.getType(t)){case"String":return n===t;case"RegExp":return t.test(n);case"Array":return t.indexOf(n)>-1;default:return!1}},castType:function(e,t,n){return r.fn.isType(e,r.fn.isType(n,"RegExp")?n:[r.fn.getType(t)].concat(r.fn.isType(n,"Array")?n:"string"==typeof n?[n]:[]))?e:t},castParam:function(e,t,n){e=r.fn.castType(e,{}),t=r.fn.castType(t,{});var i=Object.keys(t);n=function(){switch(r.fn.getType(n)){case"String":case"RegExp":case"Array":for(var e={},t=0;t<i.length;t++)e[i[t]]=n;return e;default:return n}}();for(var c=function(){for(var t={},n=Object.keys(e),r=0;r<n.length;r++)t[n[r]]=e[n[r]];return t}(),o=0;o<i.length;o++){var f=i[o];c[f]=f in e?r.fn.castType(e[f],t[f],r.fn.castType(n[f],[],["String","RegExp"])):t[f]}return c}}},i={key:"librarytemplate",val:{_root:t,undefined:n,_main:e,_ctx:r,_lib:i}};if(r.libKey=r.fn.castType(i.key,[i.key]),"object"==typeof module&&"object"==typeof module.exports&&null!==module.exports)module.exports=i.val;else for(var c=0;c<r.libKey.length;c++){var o=r.libKey[c];o in t&&(r.conflict[o]=t[o]),t[o]=i.val}return{_root:t,undefined:n,_main:e,_ctx:r,_lib:i}}("object"==typeof window?window:this);
